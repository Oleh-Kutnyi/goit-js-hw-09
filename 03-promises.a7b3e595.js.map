{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAaC,SAASC,cAAc,qBACpCC,EAAYF,SAASC,cAAc,oBACnCE,EAASH,SAASC,cAAc,sBA4BtC,SAASG,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OACS,IAAIC,QADTH,EACkBI,IAClBC,YAAW,KACTD,EAAQ,C,SAACN,E,MAAUC,GAAO,GACzBA,EAAM,EAGQ,CAACO,EAAGC,KACrBF,YAAW,KACTE,EAAO,C,SAACT,E,MAAUC,GAAO,GACxBA,EAAM,E,CAtCDN,SAASC,cAAc,uBAE/Bc,iBAAiB,SAAUC,IAC/BA,EAAMC,iBACNL,YAAW,KACT,IAAIM,EAAUd,EAAc,EAAG,GAC5Be,MAAK,EAACd,SAAEA,EAAQC,MAAEA,MACjBc,EAAAvB,GAASwB,OAAOC,QAAQ,uBAAqBjB,QAAiBC,MAAU,IAEzEiB,OAAM,EAAClB,SAAEA,EAAQC,MAAEA,MAClBc,EAAAvB,GAASwB,OAAOG,QAAQ,sBAAoBnB,QAAiBC,MAAU,IAG3E,IAAK,IAAImB,EAAI,EAAGA,GAAKtB,EAAOuB,cAAeD,IACzCP,EAAUA,EACPC,MAAK,IAAMf,EAAcqB,EAAGvB,EAAUwB,iBACtCP,MAAK,EAACd,SAAEA,EAAQC,MAAEA,MACjBc,EAAAvB,GAASwB,OAAOC,QAAQ,uBAAqBjB,QAAiBC,MAAU,IAEzEiB,OAAM,EAAClB,SAAEA,EAAQC,MAAEA,MAClBc,EAAAvB,GAASwB,OAAOG,QAAQ,sBAAoBnB,QAAeC,MAAU,GACrE,GAELP,EAAW2B,cAAc","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from \"notiflix\"\n\nconst firstDelay = document.querySelector('input[name=delay]')\nconst delayStep = document.querySelector('input[name=step]')\nconst amount = document.querySelector('input[name=amount]')\n\nconst start = document.querySelector('button[type=submit]')\n\nstart.addEventListener('click', (event) => {\n  event.preventDefault()\n  setTimeout(() => {\n    let promise = createPromise(1, 0)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)\n      })\n\n    for (let i = 2; i <= amount.valueAsNumber; i++) {\n      promise = promise\n        .then(() => createPromise(i, delayStep.valueAsNumber))\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)\n        })\n    }\n  }, firstDelay.valueAsNumber)\n})\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        resolve({position, delay})\n      }, delay)\n    })\n  } else {\n    return new Promise((_, reject) => {\n      setTimeout(() => {\n        reject({position, delay})\n      }, delay)\n    })\n  }\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$firstDelay","document","querySelector","$47d4ff9957288465$var$delayStep","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","setTimeout","_","reject","addEventListener","event","preventDefault","promise","then","$parcel$interopDefault","Notify","success","catch","failure","i","valueAsNumber"],"version":3,"file":"03-promises.a7b3e595.js.map"}